{"title":"Rebuild my hexo blog","uid":"7d2ee27a4b3a629bfbe938afcdb8714d","text":"又又又一次重新在服务器上搭建Hexo Blog之旅记得上一次建hexo还是在上次，上上次建hexo还是在上上次。第一次建hexo的时候是在我的windows系统本地搭建的，当时就是觉得很不方便，如果说我没有再用这台电脑了呢？迁移就不是很方便，所以那一次的搭建结束后，很快我就终止使...","date":"2022-07-08T08:05:23.000Z","updated":"2022-07-08T09:29:54.382Z","comments":true,"path":"api/pages/Rebuild-my-hexo-blog/index.json","covers":"https://images.pexels.com/photos/12310381/pexels-photo-12310381.jpeg","excerpt":"","content":"<h1 id=\"又又又一次重新在服务器上搭建Hexo-Blog之旅\"><a href=\"#又又又一次重新在服务器上搭建Hexo-Blog之旅\" class=\"headerlink\" title=\"又又又一次重新在服务器上搭建Hexo Blog之旅\"></a>又又又一次重新在服务器上搭建Hexo Blog之旅</h1><p>记得上一次建hexo还是在上次，上上次建hexo还是在上上次。第一次建hexo的时候是在我的windows系统本地搭建的，当时就是觉得很不方便，如果说我没有再用这台电脑了呢？迁移就不是很方便，所以那一次的搭建结束后，很快我就终止使用了那个版本的blog。</p>\n<p>第二次建hexo博客是在今年年初，当时闲着无聊，而且正好想着我的一个国内服务器加域名快要到期了，怎么说也要好好白嫖到底，于是就自己琢磨着在服务器上搭了个hexo，同时通过<strong>nginx</strong>将我的域名设置到我的hexo博客，当时觉得用着还行，结果后续还是因为自己太懒了，于是进度就又荒废了。。。这点确实想吐槽死自己。</p>\n<p>第三次，也就是这次，博客会做成什么样呢？先让我总结一下这次的搭建过程吧！</p>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>本次搭建博客，我的框架选择还是**<a href=\"https://hexo.io/\">Hexo</a>*<em>，http服务器选择</em><a href=\"https://www.nginx.com/\">Nginx</a><strong>，主题这次选择的是</strong><a href=\"https://aurora.tridiamond.tech/\">Aurora</a>**，个人觉得是一个非常不错的hexo主题，想要了解的可以去官网查看详细信息。</p>\n<p>服务器我选择的是**<a href=\"https://www.vultr.com/\">Vultr</a><strong>的VPS，毕竟这样可以省去备案的功夫和时间，同时也更方便我学习其他更多的技能；域名是选择在</strong><a href=\"https://www.namesilo.com/\">Namesilo</a>**上购买的域名，毕竟相对于海外的其他几家来说它的.com域名更加便宜，但是需要吐槽的是域名控制面板看起来好老旧啊！</p>\n<p>本次搭建还需要的工具有，**<a href=\"https://git-scm.com/\">Git</a><strong>、</strong><a href=\"https://nodejs.org/\">NodeJS</a><strong>，</strong><a href=\"https://certbot.eff.org/\">Certbot</a><strong>等。啊对了，当然还有</strong><a href=\"https://github.com/\">Github</a>**。那么接下来就让我们开始搭建属于自己的hexo博客吧！</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">注意！</p>\n<p>由于这次我选择的服务器系统为Ubuntu20.0.4，所以接下来所有的操作都是默认在Ubuntu系统上的，其它系统应该也都是大同小异，不懂得地方一定要多<a href=\"https://google.com/\">Google</a>呦！</p>\n</div>\n<h3 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h3><p>一般服务器初始默认都会包含有git，如果<code>git version</code>提示没有结果，请使用如下命令下载安装git，实在不懂可以去看官网的下载教程！</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span>\n<span class=\"token function\">git</span> version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"安装NodeJS\"><a href=\"#安装NodeJS\" class=\"headerlink\" title=\"安装NodeJS\"></a>安装NodeJS</h3><p>NodeJS的安装方法其实网络上也都可以搜到，这里我就简单介绍一下我的下载方式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -sL https://deb.nodesource.com/setup_14.x <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> -E <span class=\"token function\">bash</span> -\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> nodejs\n<span class=\"token function\">node</span> -v\n<span class=\"token function\">npm</span> -v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g hexo-cli\nhexo init <span class=\"token operator\">&lt;</span>your-blog-folder-name<span class=\"token operator\">></span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>your-blog-folder-name<span class=\"token operator\">></span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上述命令执行完毕后，你可以执行<code>hexo s</code>命令本地运行hexo，访问<a href=\"http://your_ip_address:4000/\">http://your_ip_address:4000</a>即可预览你的blog！<br>:::tip<br>如果你发现访问不了，请检查一下你的服务器防火墙是否有释放4000端口，检测方式如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> ufw status <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token number\">4000</span>\n<span class=\"token function\">sudo</span> ufw allow <span class=\"token number\">4000</span>\n<span class=\"token function\">sudo</span> ufw status <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token number\">4000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>:::</p>\n<p>接下来我们要做的是配置一下hexo的配置文件，当然这里主要讲的是deploy的配置，其他配置请自行到Hexo官网查看修改！首先，<code>vim</code>打开根目录下的<code>_config.yml</code>文件，然后翻到最底部的<code>deploy</code>部分，将内容改成如下形式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">deploy:\n\ttype: git\n\trepo: https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;&lt;project&gt;\n\tbranch: master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>:::tip</p>\n<ol>\n<li>首先，我们需要在自己github上创建一个仓库，这里详细步骤就不再赘述了，但是请注意，你的仓库名称一定要定义为<code>&lt;github_username&gt;.github.io</code>形式，具体为什么自己查阅！</li>\n<li>其次，我们需要在服务器上安装一个部署插件**<code>npm install hexo-deployer-git --save</code>**<br>:::</li>\n</ol>\n<p>完成上述所有操作后，运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>，查看你的github仓库中此时是否已经有了内容，接着在浏览器地址栏输入<code>&lt;github_username&gt;.github.io</code>来查看是否已经部署成功即可！如果没有陈工可以选择如下操作：</p>\n<ol>\n<li>重装</li>\n<li>自行Google解决！</li>\n</ol>\n<p>到这里关于hexo的安装就已经结束了，后续更多操作，就麻烦自行去官网查看或者自行Google了！</p>\n<h3 id=\"安装Aurora主题\"><a href=\"#安装Aurora主题\" class=\"headerlink\" title=\"安装Aurora主题\"></a>安装Aurora主题</h3><p>这里安装步骤其实官网都有，这里我就不过多赘述了，主要是要讲几点问题：</p>\n<ol>\n<li>安装完成后记得到<code>_config.yml</code>文件中把<code>theme</code>栏的主题名称改成<code>aurora</code>；</li>\n<li>如果说你在执行Hexo命令时遇到了一些scripts报错，直接重装主题即可，我这边卸载重装一次后就没有再报错且网站也显示正常了；</li>\n<li>记得也有修改<code>_config.aurora.yml</code>文件中的一些基础信息呦！</li>\n</ol>\n<h3 id=\"通过Nginx代理域名转发\"><a href=\"#通过Nginx代理域名转发\" class=\"headerlink\" title=\"通过Nginx代理域名转发\"></a>通过Nginx代理域名转发</h3><p>Nginx的下载这里就不过多赘述了，主要讲一下配置文件的具体格式，格式如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123;\n\tserver_name &lt;你的域名或者你的服务器ip或者localhost&gt;;\n\tlocation &#x2F; &#123;\n\t\troot &lt;你的hexo-blog文件地址&gt;&#x2F;public;\n\t\tindex index.html index.htm;\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>目前为止配置加进去这个即可，记得加到<code>http</code>块中，然后你可以尝试在浏览器中输入你的域名访问看能否访问到，哦对了，访问之前，记得重启你的nginx服务器，操作如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nginx -t\nnginx -s reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果你发现访问成功了，接下来就可以为你的域名申请证书了，这里我使用的是<strong>Certbot</strong>，接下来讲一下如何操作——其实官网里也都有说</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> snapd\n<span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> core<span class=\"token punctuation\">;</span> <span class=\"token function\">sudo</span> snap refresh core\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> remove certbot\n<span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> --classic certbot\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /snap/bin/certbot /usr/bin/certbot\n<span class=\"token function\">sudo</span> certbot --nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行完上述最后一条命令，根据提示输入信息，随后再查看你的nginx配置文件，你就会发现多了一些证书信息，这个时候在你的域名前加上https并再次访问，查看是否访问成功！</p>\n<p>还有一点是，申请的证书有效期是三个月，所以在到期之前，你需要给你的证书更新一下，具体怎么做可以自行解决！我太懒了，就不在这里多说了！</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>这一次其实还是踩了不少坑的，比如通过github pages想代理我的域名的时候，怎么解析都检测不到正确的dns，再比如现在好多教程都是教你在服务器上搭git仓库然后进行各种操作，我是不太懂啊，只是觉得怎么方便怎么来！希望这次能够坚持下去，学习！努力！赚钱！也当作记录美好生活吧。那么这篇blog就到这里结束了！</p>\n","count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%88%E5%8F%88%E5%8F%88%E4%B8%80%E6%AC%A1%E9%87%8D%E6%96%B0%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAHexo-Blog%E4%B9%8B%E6%97%85\"><span class=\"toc-text\">又又又一次重新在服务器上搭建Hexo Blog之旅</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">准备工作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Git\"><span class=\"toc-text\">安装Git</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85NodeJS\"><span class=\"toc-text\">安装NodeJS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Hexo\"><span class=\"toc-text\">安装Hexo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Aurora%E4%B8%BB%E9%A2%98\"><span class=\"toc-text\">安装Aurora主题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87Nginx%E4%BB%A3%E7%90%86%E5%9F%9F%E5%90%8D%E8%BD%AC%E5%8F%91\"><span class=\"toc-text\">通过Nginx代理域名转发</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>"}